apiVersion: logging.openshift.io/v1
kind: ClusterLogging
metadata:
  name: instance
  namespace: openshift-logging
spec:
  managementState: Managed
  logStore:
    type: lokistack
    lokistack:
      name: logging-loki
  collection:
    type: vector
    vector:
      nodeSelector:
        kubernetes.io/os: "linux"
      resources:
        limits:
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      tolerations:
      # - effect: NoSchedule
      #   key: node-role.kubernetes.io/master
      #   operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
  visualization:
    type: ocp-console
    ocpConsole:
      logsLimit: 15
# ---
# apiVersion: logging.coreos.com/v1
# kind: ClusterLogForwarder
# metadata:
#   name: instance
#   namespace: openshift-logging
# spec:
#   serviceAccountName: logcollector
#   outputs:
#   - name: loki-app
#     type: loki
#     loki:
#       url: http://logging-loki-gateway-http.openshift-logging.svc:8080/api/logs/v1/application
#     secret:
#       name: logcollector
#   - name: loki-infra
#     type: loki
#     loki:
#       url: http://logging-loki-gateway-http.openshift-logging.svc:8080/api/logs/v1/infrastructure
#     secret:
#       name: logcollector
#   - name: loki-audit
#     type: loki
#     loki:
#       url: http://logging-loki-gateway-http.openshift-logging.svc:8080/api/logs/v1/audit
#     secret:
#       name: logcollector
#   pipelines:
#   - name: application-logs
#     inputRefs:
#     - application
#     outputRefs:
#     - loki-app
#   - name: infrastructure-logs
#     inputRefs:
#     - infrastructure
#     outputRefs:
#     - loki-infra
#   - name: audit-logs
#     inputRefs:
#     - audit
#     outputRefs:
#     - loki-audit
