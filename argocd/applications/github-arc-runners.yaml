apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: github-arc-runners
  namespace: openshift-gitops
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: ghcr.io/actions/actions-runner-controller-charts
    chart: gha-runner-scale-set
    targetRevision: "0.12.1"
    helm:
      releaseName: arc-runner-set
      values: |
        githubConfigUrl: https://github.com/adhambbaker/github-arc-gitops
        # githubConfigSecret:
        #   github_token: xx
          # Controller service account configuration
        controllerServiceAccount:
          name: arc-gha-rs-controller
          namespace: arc-system
        minRunners: 1

        listenerTemplate:
          metadata: 
            annotations: 
              k8s.grafana.com/scrape: "true"
              k8s.grafana.com/metrics.portNumber: "8080"
              k8s.grafana.com/metrics.path: "/metrics"

        listenerMetrics:
          counters:
            gha_started_jobs_total:
              labels:
                ["repository", "organization", "enterprise", "job_name", "event_name", "job_workflow_ref"]
            gha_completed_jobs_total:
              labels:
                [
                  "repository",
                  "organization",
                  "enterprise",
                  "job_name",
                  "event_name",
                  "job_result",
                  "job_workflow_ref",
                ]
          gauges:
            gha_assigned_jobs:
              labels: ["name", "namespace", "repository", "organization", "enterprise"]
            gha_running_jobs:
              labels: ["name", "namespace", "repository", "organization", "enterprise"]
            gha_registered_runners:
              labels: ["name", "namespace", "repository", "organization", "enterprise"]
            gha_busy_runners:
              labels: ["name", "namespace", "repository", "organization", "enterprise"]
            gha_min_runners:
              labels: ["name", "namespace", "repository", "organization", "enterprise"]
            gha_max_runners:
              labels: ["name", "namespace", "repository", "organization", "enterprise"]
            gha_desired_runners:
              labels: ["name", "namespace", "repository", "organization", "enterprise"]
            gha_idle_runners:
              labels: ["name", "namespace", "repository", "organization", "enterprise"]
          histograms:
            gha_job_startup_duration_seconds:
              labels:
                ["repository", "organization", "enterprise", "job_name", "event_name","job_workflow_ref"]
              buckets:
                [
                  0.01,
                  0.05,
                  0.1,
                  0.5,
                  1.0,
                  2.0,
                  3.0,
                  4.0,
                  5.0,
                  6.0,
                  7.0,
                  8.0,
                  9.0,
                  10.0,
                  12.0,
                  15.0,
                  18.0,
                  20.0,
                  25.0,
                  30.0,
                  40.0,
                  50.0,
                  60.0,
                  70.0,
                  80.0,
                  90.0,
                  100.0,
                  110.0,
                  120.0,
                  150.0,
                  180.0,
                  210.0,
                  240.0,
                  300.0,
                  360.0,
                  420.0,
                  480.0,
                  540.0,
                  600.0,
                  900.0,
                  1200.0,
                  1800.0,
                  2400.0,
                  3000.0,
                  3600.0,
                ]
            gha_job_execution_duration_seconds:
              labels:
                [
                  "repository",
                  "organization",
                  "enterprise",
                  "job_name",
                  "event_name",
                  "job_result",
                  "job_workflow_ref"
                ]
              buckets:
                [
                  0.01,
                  0.05,
                  0.1,
                  0.5,
                  1.0,
                  2.0,
                  3.0,
                  4.0,
                  5.0,
                  6.0,
                  7.0,
                  8.0,
                  9.0,
                  10.0,
                  12.0,
                  15.0,
                  18.0,
                  20.0,
                  25.0,
                  30.0,
                  40.0,
                  50.0,
                  60.0,
                  70.0,
                  80.0,
                  90.0,
                  100.0,
                  110.0,
                  120.0,
                  150.0,
                  180.0,
                  210.0,
                  240.0,
                  300.0,
                  360.0,
                  420.0,
                  480.0,
                  540.0,
                  600.0,
                  900.0,
                  1200.0,
                  1800.0,
                  2400.0,
                  3000.0,
                  3600.0,
                ]

        template:
          spec:
          spec:
            containers:
              - name: runner
                image: ghcr.io/actions/actions-runner:latest
                command: ["/home/runner/run.sh"]
            # initContainers:
            # - name: init-dind-externals
            #   resources:
            #     requests:
            #       memory: 100Mi
            #     limits:
            #       memory: 8Gi
            #   image: ghcr.io/actions/actions-runner:latest
            #   command: ["cp", "-r", "-v", "/home/runner/externals/.", "/home/runner/tmpDir/"]
            #   volumeMounts:
            #     - name: dind-externals
            #       mountPath: /home/runner/tmpDir
            # containers:
            # - name: runner
            #   resources:
            #     requests:
            #       memory: 100Mi
            #     limits:
            #       memory: 5Gi
            #   image: ghcr.io/actions/actions-runner:latest
            #   command: ["/home/runner/run.sh"]
            #   env:
            #     - name: DOCKER_HOST
            #       value: unix:///var/run/docker.sock
            #   volumeMounts:
            #     - name: work
            #       mountPath: /home/runner/_work
            #     - name: dind-sock
            #       mountPath: /var/run
            # - name: dind
            #   resources:
            #     requests:
            #       memory: 100Mi
            #     limits:
            #       memory: 8Gi
            #   image: ghcr.io/actions/actions-runner:latest
            #   args:
            #     - dockerd
            #     - --host=unix:///var/run/docker.sock
            #     - --group=$(DOCKER_GROUP_GID)
            #   env:
            #     - name: DOCKER_GROUP_GID
            #       value: "123"
            #   securityContext:
            #     privileged: true
            #   volumeMounts:
            #     - name: work
            #       mountPath: /home/runner/_work
            #     - name: var-lib-docker
            #       mountPath: /var/lib/docker
            #     - name: dind-sock
            #       mountPath: /var/run
            #     - name: dind-externals
            #       mountPath: /home/runner/externals
            #     - mountPath: /etc/docker/daemon.json
            #       name: daemon-json
            #       readOnly: true
            #       subPath: daemon.json
            # nodeSelector:
            #   kubernetes.io/os: linux
            # imagePullSecrets:
            #   - name: ""
            # volumes:
            # - name: work
            #   emptyDir: {}
            # - name: var-lib-docker
            #   ephemeral:
            #     volumeClaimTemplate:
            #       spec:
            #         accessModes:
            #           - ReadWriteOnce
            #         resources:
            #           requests:
            #             storage: 10Gi
            # - name: dind-sock
            #   emptyDir: {}
            # - name: dind-externals
            #   emptyDir: {}
            # - configMap:
            #     name: docker-daemon-config
            #   name: daemon-json
  destination:
    server: https://kubernetes.default.svc
    namespace: arc-runners
  # syncPolicy:
  #   automated:
  #     prune: false
  #     selfHeal: false
    syncOptions:
      - CreateNamespace=true